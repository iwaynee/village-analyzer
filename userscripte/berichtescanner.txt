// ==UserScript==
// @name        DS-Berichte Scanner
// @namespace   http://support-nur-im-forum.at/
// @description DS-Berichte Scanner
// @author      kekw
// @version     1.0
// @include     https://de*.die-staemme.de/game.php?*screen=*report*&mode=*&view=*
// @run-at document-end
// ==/UserScript==
 
var win = typeof unsafeWindow != 'undefined' ? unsafeWindow : window;
var api = typeof unsafeWindow != 'undefined' ? unsafeWindow.ScriptAPI : window.ScriptAPI;
var game_data = typeof unsafeWindow != 'undefined' ? unsafeWindow.game_data : window.game_data;


function getId(name, url = window.location.href) {
	name = name.replace("/[[]]/g", '\$&');
	var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);
	if (!results) return null;
	if (!results[2]) return '';
		
  return decodeURIComponent(results[2].replace("/+/g", ' '));
}

async function postData(url = '', data = {}) {
    const response = await fetch(url, {
        method: 'POST',
        mode: 'cors',
        cache: 'no-cache',
        headers: {
            'Content-Type': 'application/json'
        },
        redirect: 'follow',
        body: JSON.stringify(data)
    });
    return response.json();
}



if ( document.querySelectorAll("#attack_info_att").length > 0 ) {
  
  let incomingDateRAW = document.querySelectorAll(".nopad .vis tbody tr td")[8].innerText;
  var temp1 = incomingDateRAW.split('.');
  var temp2 = incomingDateRAW.split(':');

  var incomingDate = Math.round(new Date(20 + temp1[2].split(' ')[0], 
                              temp1[1]-1, 
                              temp1[0], 
                              temp2[0].split(' ')[1]-1, 
                              temp2[1], 
                              temp2[2]).getTime()/1000); 

  let server = game_data.world;


  var reportId = getId("view");



	attackingPlayer = getId("id", document.querySelectorAll("#attack_info_att tr a")[0].href );
  attackingVillage = getId("id", document.querySelectorAll("#attack_info_att tr a")[1].href);


  let attackingTroops = {
    "sent": [  
      document.querySelectorAll("#attack_info_att .unit-item-spear")[0].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-sword")[0].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-axe")[0].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-spy")[0].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-light")[0].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-heavy")[0].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-ram")[0].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-catapult")[0].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-snob")[0].innerText,
    ],
    "lost": [
      document.querySelectorAll("#attack_info_att .unit-item-spear")[1].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-sword")[1].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-axe")[1].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-spy")[1].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-light")[1].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-heavy")[1].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-ram")[1].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-catapult")[1].innerText,
      document.querySelectorAll("#attack_info_att .unit-item-snob")[1].innerText
    ]
  };


  defendingPlayer = getId("id", document.querySelectorAll("#attack_info_def tr th a")[0].href );
  defendingVillage = getId("id", document.querySelectorAll("#attack_info_def tr a")[1].href);

  var defendingTroops = false;

  if ( document.querySelectorAll("#attack_info_def .unit-item-spear").length > 0 ){
    defendingTroops = {
      "defending": [
        document.querySelectorAll("#attack_info_def .unit-item-spear")[0].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-sword")[0].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-axe")[0].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-spy")[0].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-light")[0].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-heavy")[0].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-ram")[0].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-catapult")[0].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-snob")[0].innerText,
      ],
      "lost":[
        document.querySelectorAll("#attack_info_def .unit-item-spear")[1].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-sword")[1].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-axe")[1].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-spy")[1].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-light")[1].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-heavy")[1].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-ram")[1].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-catapult")[1].innerText,
        document.querySelectorAll("#attack_info_def .unit-item-snob")[1].innerText
      ]
    };
  }


  let outside = false;

  if (document.querySelectorAll("#attack_spy_away").length == 1) {
    outside = [
        document.querySelectorAll("#attack_spy_away .unit-item-spear")[0].innerText,
        document.querySelectorAll("#attack_spy_away .unit-item-sword")[0].innerText,
        document.querySelectorAll("#attack_spy_away .unit-item-axe")[0].innerText,
        document.querySelectorAll("#attack_spy_away .unit-item-spy")[0].innerText,
        document.querySelectorAll("#attack_spy_away .unit-item-light")[0].innerText,
        document.querySelectorAll("#attack_spy_away .unit-item-heavy")[0].innerText,
        document.querySelectorAll("#attack_spy_away .unit-item-ram")[0].innerText,
        document.querySelectorAll("#attack_spy_away .unit-item-catapult")[0].innerText,
        document.querySelectorAll("#attack_spy_away .unit-item-snob")[0].innerText,
    ];
  }




  var buildings = false;

  if (document.querySelectorAll("table#attack_spy_buildings_left tr").length > 0) {
    buildings = {
      "main": 0,
      "barracks": 0,
      "stable": 0,
      "garage": 0,
      "watchtower": 0,
      "snob": 0,
      "smith": 0,
      "place": 0,
      "market": 0,
      "wood": 0,
      "stone": 0,
      "iron": 0,
      "farm": 0,
      "storage": 0,
      "hide": 0,
      "wall": 0,
    };  

    var left = document.querySelectorAll("table#attack_spy_buildings_left tr");
    var right = document.querySelectorAll("table#attack_spy_buildings_right tr");

    for (i = 1; i < left.length; i++) {
      var building = left[i].children[0].children[1].innerText;
      var lvl = left[i].children[1].innerText;


      if (building == "Hauptgeb채ude") {
        buildings["main"] = lvl;  

      } else if (building == "Kaserne") {
        buildings["barracks"] = lvl;

      } else if (building == "Stall") {
        buildings["stable"] = lvl;

      } else if (building == "Werkstatt") {
        buildings["garage"] = lvl;

      } else if (building == "Adelshof") {
        buildings["snob"] = lvl; 

      } else if (building == "Schmiede") {
        buildings["smith"] = lvl; 

      } else if (building == "Versammlungsplatz") {
        buildings["place"] = lvl; 

      } else if (building == "Wachturm") {
        buildings["watchtower"] = lvl;  

      } else if (building == "Marktplatz") {
        buildings["market"] = lvl; 

      } else if (building == "Holzf채llerlager") {
        buildings["wood"] = lvl; 

      } else if (building == "Lehmgrube") {
        buildings["stone"] = lvl; 

      } else if (building == "Eisenmine") {
        buildings["iron"] = lvl; 

      } else if (building == "Bauernhof") {
        buildings["farm"] = lvl; 

      } else if (building == "Speicher") {
        buildings["storage"] = lvl; 

      } else if (building == "Versteck") {
        buildings["hide"] = lvl; 

      } else if (building == "Wall") {
        buildings["wall"] = lvl; 
      } 
    }

    for (i = 1; i < right.length; i++) {

      if (right[i].children.lenght > 0){

        var building = right[i].children[0].children[1].innerText;
        var lvl = right[i].children[1].innerText;


        if (building == "Hauptgeb채ude") {
          buildings["main"] = lvl;  

        } else if (building == "Kaserne") {
          buildings["barracks"] = lvl;

        } else if (building == "Stall") {
          buildings["stable"] = lvl;

        } else if (building == "Werkstatt") {
          buildings["garage"] = lvl;

        } else if (building == "Adelshof") {
          buildings["snob"] = lvl; 

        } else if (building == "Schmiede") {
          buildings["smith"] = lvl; 

        } else if (building == "Versammlungsplatz") {
          buildings["place"] = lvl; 

        } else if (building == "Wachturm") {
          buildings["watchtower"] = lvl;  

        } else if (building == "Marktplatz") {
          buildings["market"] = lvl; 

        } else if (building == "Holzf채llerlager") {
          buildings["wood"] = lvl; 

        } else if (building == "Lehmgrube") {
          buildings["stone"] = lvl; 

        } else if (building == "Eisenmine") {
          buildings["iron"] = lvl; 

        } else if (building == "Bauernhof") {
          buildings["farm"] = lvl; 

        } else if (building == "Speicher") {
          buildings["storage"] = lvl; 

        } else if (building == "Versteck") {
          buildings["hide"] = lvl; 

        } else if (building == "Wall") {
          buildings["wall"] = lvl; 
        } 
      }
    }

  }




  var report_data = {
    "server": server,
    "timestamp": incomingDate,

    "attacker_village": attackingVillage,
    "defender_village": defendingVillage,

    "troops": {
      "attack_troops": attackingTroops["sent"],
      "attack_troops_dead": attackingTroops["lost"],
    }
  };

  if ( defendingTroops) {
    report_data["troops"]["defending_troops"] = defendingTroops["defending"];
    report_data["troops"]["defending_troops_dead"] = defendingTroops["lost"];
  }

  if ( outside ) {
    report_data["troops"]["outside_troops"] = outside;
  }

  if ( buildings ) {
    report_data["building_lvl"] = buildings;
  }


  console.log(report_data);

  postData("http://46.101.174.242:3600/new_report", report_data);
  //postData("http://localhost:3600/new_report", report_data);
}
